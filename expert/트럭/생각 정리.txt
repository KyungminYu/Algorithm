사용 객체
Coordinate: 위치값(0~999, 0 ~ 999), 거리 계산시 맨하탄 디스턴스 사용
Product: id, count 값 사용 (id: 0 ~ 9999. count:  1 ~ 1000)

run 메서드 분석
Center는 1000개 
각 Center에는 1~100 종류의 product 존재 각 product는 1~100개, 만약 중족되면 배수가 될 수도 있다

-> center별 중복되는 product를 처리할 필요가 있음

Delivery는 100만개
각 Delivery별로 필요한 product가 1개 있음(10000 종류 procuct, 평균 100개의 product 필요)

center와 delivery위치 겹칠 수 있음, delivery끼리 겹칠 수 있음

Truck Pos -> 임의의 truck pos에서 시작
score 최소화


delivery_order_list 음수 되면 안됨
-> 적정선을 나눠서 Center에서 Delivery로 전달


truckMove
-> param-> deliveryId 사용
특정 delivery Id를 사용 truck에 실려있는것에서 deliveryId가 요청하는 product가 있으면 전달 없으면 넘어감

truckLoading
-> param-> centerID, packageList[], listSize 사용
centerId에서 product를 truck에 전달
packageList, listSize -> 필요한 product list 정보 -
한번에 트럭에 50개 넘게 넣고 이동 불기


1. 이동 거리 최소화(1회 max 2000)
2. 트럭에 실려있는 물건 최대한 빠르게 소비

center 1000개
delivery 1000000개
truck 1대

한 center에 할당된 product의 최소 1개 -> 최대 10000개

delivery / center -> 1000

각 center에 할당해야 하는 delivery 1000개

가까운 순으로 50개씩 로딩해서 20번 진행

sendCenterList, sendDeliveryList
Center에서 가장 가까운 Delivery기준으로 처리가능한 List 구성
Center 선택 기준은? 한쪽으로 편중되지 않게?

solve
truck 위치에서 가장 가까운 Center로 이동

1. 가장 가까운 50개의 deleivery 탐색
-> 필요한 productList 구성
2. truck loading
     1안 필요한 product를 가진 center중 가장 가까운 center를 방문,
           다 못채우는 경우 채울 때까지 방문 ??     
     2안 가장 가까운 center방문, productList 요구 50개 언더의 product 구해짐
    
3. truck move
1에서 요청한 delivery중 product가 구해진 곳중 현재 위치와 가까운 곳 기준으로 move(매순간 비교, 50개 아래라 매번 현위치와 비교하는게 나을 듯, map bfs 활용)

1. 가장 가까운 center 방문 ? 무슨 product가 필요한지 알 수 없다.. (시작도 안됨)
